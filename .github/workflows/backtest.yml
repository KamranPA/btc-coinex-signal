# .github/workflows/backtest.yml

name: Manual Backtest

on:
  workflow_dispatch:
    inputs:
      symbol:
        description: 'Trading pair (e.g. BTC-USDT)'
        required: true
        default: 'BTC-USDT'
      timeframe:
        description: 'Candle timeframe (e.g. 1h)'
        required: true
        default: '1h'
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
        default: '2023-01-01'
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
        default: '2024-01-01'

jobs:
  backtest:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ تنظیمات اولیه
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ نصب پایتون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3️⃣ نصب وابستگی‌ها
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ ایجاد فایل backtest_config.yml از ورودی‌ها
      - name: Generate backtest config
        env:
          SYMBOL: ${{ github.event.inputs.symbol }}
          TIMEFRAME: ${{ github.event.inputs.timeframe }}
          START_DATE: ${{ github.event.inputs.start_date }}T00:00:00
          END_DATE: ${{ github.event.inputs.end_date }}T00:00:00
        run: |
          mkdir -p config
          cat << EOF > config/backtest_config.yml
backtest:
  symbol: "$SYMBOL"
  timeframe: "$TIMEFRAME"
  start_date: "$START_DATE"
  end_date: "$END_DATE"
  limit: 1000
  mode: "manual"
risk:
  stop_loss_percent: 1.0
  take_profit_percent: 3.0
debug:
  enable_logging: true
  log_level: "INFO"
EOF

      # 5️⃣ اجرای بکتست
      - name: Run Backtest
        run: python main.py

      # 6️⃣ آپلود نتایج
      - name: Upload backtest report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: backtest-results
          path: |
            results/backtest_report.json
            results/trades_log.csv
            logs/bot.log

      # 7️⃣ ارسال نتیجه به تلگرام (اختیاری - فقط اگر توکن تنظیم شده باشد)
      - name: Send to Telegram
        if: success() && secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MESSAGE="✅ Backtest completed: ${{ github.event.inputs.symbol }} | ${{ github.event.inputs.timeframe }}"
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -d chat_id=$TELEGRAM_CHAT_ID \
          -d text="$MESSAGE"
