name: اجرای سیستم معاملاتی

on:
  schedule:
    - cron: '*/15 3-20 * * *'  # هر 15 دقیقه از ساعت 6:30 تا 23:30 به وقت ایران
  workflow_dispatch:

jobs:
  run-trading:
    runs-on: ubuntu-20.04  # استفاده از نسخه پایدار اوبونتو
    timeout-minutes: 20
    
    steps:
    # مرحله 1: دریافت کدها
    - uses: actions/checkout@v4

    # مرحله 2: تنظیم پایتون
    - name: تنظیم پایتون 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        architecture: 'x64'

    # مرحله 3: نصب TA-Lib بدون نیاز به کامپایل
    - name: نصب TA-Lib (روش بدون دردسر)
      run: |
        # استفاده از مخزن قدیمی اوبونتو
        echo "deb http://archive.ubuntu.com/ubuntu focal universe" | sudo tee /etc/apt/sources.list.d/focal.list
        sudo apt-get update -y
        sudo apt-get install -y python3-ta-lib
        sudo rm /etc/apt/sources.list.d/focal.list
        sudo apt-get update -y  # بازگشت به مخازن اصلی

    # مرحله 4: نصب سایر پیش‌نیازها
    - name: نصب پیش‌نیازهای سیستم
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          python3-dev \
          build-essential \
          libssl-dev \
          libffi-dev

    # مرحله 5: تنظیم محیط پایتون
    - name: تنظیم محیط پایتون
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools

    # مرحله 6: نصب کتابخانه‌ها
    - name: نصب کتابخانه‌های پایتون
      run: |
        pip install -r requirements.txt
        # نصب TA-Lib برای پایتون (اگر نیاز بود)
        pip install TA-Lib --pre --no-cache-dir || echo "نصب TA-Lib اختیاری بود"

    # مرحله 7: بررسی نصب
    - name: بررسی محیط اجرا
      run: |
        python -c "print('بررسی محیط پایتون:')"
        python -c "import sys; print(f'نسخه پایتون: {sys.version}')"
        python -c "try: import talib; print('TA-Lib:', talib.__version__); except: print('TA-Lib یافت نشد')"

    # مرحله 8: آماده‌سازی ساختار فایل‌ها
    - name: ایجاد ساختار پوشه‌ها
      run: |
        mkdir -p logs
        mkdir -p results
        mkdir -p src/logs
        mkdir -p src/results
        touch logs/trading.log

    # مرحله 9: اجرای سیستم
    - name: اجرای سیستم معاملاتی
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        PYTHONUNBUFFERED: 1  # برای مشاهده لاگ‌های بلادرنگ
      run: |
        cd src && python main.py --mode live

    # مرحله 10: ذخیره نتایج
    - name: ذخیره خروجی‌ها
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trading-results
        path: |
          logs/
          results/
        retention-days: 7
